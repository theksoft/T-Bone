# ==============================================================================
# Exemple of client configuration file.
# ------------------------------------------------------------------------------
# Default configuration file name is tbone-server.cfg
# You can use another filename and configure it with __TEEC_Configure().
# ------------------------------------------------------------------------------
# When no configuration file is provided, default is a single TEE defined
# with the following equivalent definition:
# TODO
# ------------------------------------------------------------------------------
# T-Bone uses the libconfig library [https://hyperrealm.github.io/libconfig/].
# Check the documentation for help on configuration syntax.
# ==============================================================================

# The following example defined a TEE server.

# Name can be freely defined. It is used in combination of TEE inspection to 
# identify the observed server, in logs for example.
name: "My-TEE";

# <services> defines the list of server listening interfaces.
#
# + Interface <type> can have the following values:
#   - "application": Define at least one interface of type "application" for
#     serving TEE client application. Several servers can be defined but for 
#     different protocol but only one per protocol.
#   - "inspect": Define an optional interface for TEE resources inspection.
#
# + "application" service can serve client applications using local <protocol>
#   interface configured with a <local-file> file path shared with client 
#   application. "application" service can also serve client application using 
#   TCP/IP <protocol> interface configured with a <port> used by client
#   application.
#
# + "inspect" service can serve browser connection using HTTP <protocol>
#   interface.

services : (
  {
    # <type> defines the type of service and can have the following values:
    # + "application" for serving TEE client application,
    # + "inspect" for serving TEE resources inspection.
    type: "application",
    # <protocol> is the type of protocol. Values for application type can be:
    # + "local" for TEE client applications using local connections.
    # + "net-tcp" for TEE client applications using TCP/IP connections.
    protocol: "local",
    # <local-file> is the file associated to the local protocol server.
    # It can be any valid file path and must match a TEE client application 
    # aiming at connecting to the TEE server.
    local-file: "/tmp/sock-tee"
  },
  {
    type: "application",
    protocol: "net-tcp",
    # <port> for "net-tcp" domain is the port associated to the TCP/IP server.
    # It can be any valid available port and must match a TEE client application 
    # aiming at connecting to the TEE server.
    port: 14582
  },
  {
    type: "inspect",
    # <protocol> is the type of protocol. Values for inspect type can be:
    # + "net-http" for serving a browser aiming at TEE resources inspection.
    protocol: "net-http",
    # <port> for "net-http" is the port associated to the HTTP server.
    # It can be any valid available port and must be provided in the browser URL
    # aiming at connecting to the TEE server for inspection.
    port: 12000
  }
);
